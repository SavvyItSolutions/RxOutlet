#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RxOutlet.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RxOutlet")]
	public partial class RxOutletDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblMainMenu(tblMainMenu instance);
    partial void UpdatetblMainMenu(tblMainMenu instance);
    partial void DeletetblMainMenu(tblMainMenu instance);
    partial void InserttblMenuItem(tblMenuItem instance);
    partial void UpdatetblMenuItem(tblMenuItem instance);
    partial void DeletetblMenuItem(tblMenuItem instance);
    partial void InserttblSubMenus(tblSubMenus instance);
    partial void UpdatetblSubMenus(tblSubMenus instance);
    partial void DeletetblSubMenus(tblSubMenus instance);
    partial void InsertDruginfo(Druginfo instance);
    partial void UpdateDruginfo(Druginfo instance);
    partial void DeleteDruginfo(Druginfo instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    #endregion
		
		public RxOutletDataContext() : 
				base(global::RxOutlet.DataAccess.Properties.Settings.Default.RxOutletConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public RxOutletDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RxOutletDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RxOutletDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RxOutletDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblMainMenu> tblMainMenus
		{
			get
			{
				return this.GetTable<tblMainMenu>();
			}
		}
		
		public System.Data.Linq.Table<tblMenuItem> tblMenuItems
		{
			get
			{
				return this.GetTable<tblMenuItem>();
			}
		}
		
		public System.Data.Linq.Table<tblSubMenus> tblSubMenus
		{
			get
			{
				return this.GetTable<tblSubMenus>();
			}
		}
		
		public System.Data.Linq.Table<Druginfo> Druginfos
		{
			get
			{
				return this.GetTable<Druginfo>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDrugList")]
		public ISingleResult<GetDrugListResult> GetDrugList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetDrugListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDrugTypes")]
		public ISingleResult<GetDrugTypesResult> GetDrugTypes()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetDrugTypesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSupplierName")]
		public ISingleResult<GetSupplierNameResult> GetSupplierName()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetSupplierNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetProductDetails")]
		public ISingleResult<GetProductDetailsResult> GetProductDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DrugID", DbType="Int")] System.Nullable<int> drugID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), drugID);
			return ((ISingleResult<GetProductDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDrugNamesSearch")]
		public ISingleResult<GetDrugNamesSearchResult> GetDrugNamesSearch()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetDrugNamesSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetMenu")]
		public ISingleResult<GetMenuResult> GetMenu()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetMenuResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="rxadmin.Registration")]
		public int Registration([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(256)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="NVarChar(MAX)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhoneNumber", DbType="NVarChar(256)")] string phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(256)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email, password, phoneNumber, userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="rxadmin.Login")]
		public ISingleResult<LoginResult> Login([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(256)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), email);
			return ((ISingleResult<LoginResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="rxadmin.PrescriptionsUpload")]
		public int PrescriptionsUpload([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="VarChar(256)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(MAX)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageUrl", DbType="VarChar(256)")] string imageUrl, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), title, description, imageUrl, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="rxadmin.GetUserPrescriptionList")]
		public ISingleResult<GetUserPrescriptionListResult> GetUserPrescriptionList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<GetUserPrescriptionListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="rxadmin.ConfirmationEmail")]
		public ISingleResult<ConfirmationEmailResult> ConfirmationEmail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<ConfirmationEmailResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="rxadmin.PrescriptionList")]
		public ISingleResult<PrescriptionListResult> PrescriptionList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<PrescriptionListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateVerificationMail")]
		public int UpdateVerificationMail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActivationCode", DbType="VarChar(MAX)")] string activationCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activationCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertActivationCode")]
		public ISingleResult<InsertActivationCodeResult> InsertActivationCode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActivationCode", DbType="VarChar(MAX)")] string activationCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(256)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activationCode, email);
			return ((ISingleResult<InsertActivationCodeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="rxadmin.UploadingPrescriptionNew")]
		public ISingleResult<UploadingPrescriptionNewResult> UploadingPrescriptionNew([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageUrl", DbType="VarChar(256)")] string imageUrl, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="NVarChar(128)")] string userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhysicianName", DbType="VarChar(256)")] string physicianName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhysicianNumber", DbType="VarChar(256)")] string physicianNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MedicationFor", DbType="VarChar(256)")] string medicationFor)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), imageUrl, userID, physicianName, physicianNumber, medicationFor);
			return ((ISingleResult<UploadingPrescriptionNewResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMainMenu")]
	public partial class tblMainMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuID;
		
		private string _MenuName;
		
		private EntitySet<tblMenuItem> _tblMenuItems;
		
		private EntitySet<tblSubMenus> _tblSubMenus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    #endregion
		
		public tblMainMenu()
		{
			this._tblMenuItems = new EntitySet<tblMenuItem>(new Action<tblMenuItem>(this.attach_tblMenuItems), new Action<tblMenuItem>(this.detach_tblMenuItems));
			this._tblSubMenus = new EntitySet<tblSubMenus>(new Action<tblSubMenus>(this.attach_tblSubMenus), new Action<tblSubMenus>(this.detach_tblSubMenus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMainMenu_tblMenuItem", Storage="_tblMenuItems", ThisKey="MenuID", OtherKey="MenuID")]
		public EntitySet<tblMenuItem> tblMenuItems
		{
			get
			{
				return this._tblMenuItems;
			}
			set
			{
				this._tblMenuItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMainMenu_tblSubMenus", Storage="_tblSubMenus", ThisKey="MenuID", OtherKey="MenuID")]
		public EntitySet<tblSubMenus> tblSubMenus
		{
			get
			{
				return this._tblSubMenus;
			}
			set
			{
				this._tblSubMenus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMenuItems(tblMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.tblMainMenu = this;
		}
		
		private void detach_tblMenuItems(tblMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.tblMainMenu = null;
		}
		
		private void attach_tblSubMenus(tblSubMenus entity)
		{
			this.SendPropertyChanging();
			entity.tblMainMenu = this;
		}
		
		private void detach_tblSubMenus(tblSubMenus entity)
		{
			this.SendPropertyChanging();
			entity.tblMainMenu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMenuItems")]
	public partial class tblMenuItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuItemID;
		
		private string _MenuItemName;
		
		private System.Nullable<int> _MenuID;
		
		private System.Nullable<int> _SubMenuID;
		
		private EntityRef<tblMainMenu> _tblMainMenu;
		
		private EntityRef<tblSubMenus> _tblSubMenus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuItemIDChanging(int value);
    partial void OnMenuItemIDChanged();
    partial void OnMenuItemNameChanging(string value);
    partial void OnMenuItemNameChanged();
    partial void OnMenuIDChanging(System.Nullable<int> value);
    partial void OnMenuIDChanged();
    partial void OnSubMenuIDChanging(System.Nullable<int> value);
    partial void OnSubMenuIDChanged();
    #endregion
		
		public tblMenuItem()
		{
			this._tblMainMenu = default(EntityRef<tblMainMenu>);
			this._tblSubMenus = default(EntityRef<tblSubMenus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MenuItemID
		{
			get
			{
				return this._MenuItemID;
			}
			set
			{
				if ((this._MenuItemID != value))
				{
					this.OnMenuItemIDChanging(value);
					this.SendPropertyChanging();
					this._MenuItemID = value;
					this.SendPropertyChanged("MenuItemID");
					this.OnMenuItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemName", DbType="VarChar(200)")]
		public string MenuItemName
		{
			get
			{
				return this._MenuItemName;
			}
			set
			{
				if ((this._MenuItemName != value))
				{
					this.OnMenuItemNameChanging(value);
					this.SendPropertyChanging();
					this._MenuItemName = value;
					this.SendPropertyChanged("MenuItemName");
					this.OnMenuItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int")]
		public System.Nullable<int> MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._tblMainMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenuID", DbType="Int")]
		public System.Nullable<int> SubMenuID
		{
			get
			{
				return this._SubMenuID;
			}
			set
			{
				if ((this._SubMenuID != value))
				{
					if (this._tblSubMenus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubMenuIDChanging(value);
					this.SendPropertyChanging();
					this._SubMenuID = value;
					this.SendPropertyChanged("SubMenuID");
					this.OnSubMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMainMenu_tblMenuItem", Storage="_tblMainMenu", ThisKey="MenuID", OtherKey="MenuID", IsForeignKey=true)]
		public tblMainMenu tblMainMenu
		{
			get
			{
				return this._tblMainMenu.Entity;
			}
			set
			{
				tblMainMenu previousValue = this._tblMainMenu.Entity;
				if (((previousValue != value) 
							|| (this._tblMainMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMainMenu.Entity = null;
						previousValue.tblMenuItems.Remove(this);
					}
					this._tblMainMenu.Entity = value;
					if ((value != null))
					{
						value.tblMenuItems.Add(this);
						this._MenuID = value.MenuID;
					}
					else
					{
						this._MenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMainMenu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSubMenus_tblMenuItem", Storage="_tblSubMenus", ThisKey="SubMenuID", OtherKey="SubMenuID", IsForeignKey=true)]
		public tblSubMenus tblSubMenus
		{
			get
			{
				return this._tblSubMenus.Entity;
			}
			set
			{
				tblSubMenus previousValue = this._tblSubMenus.Entity;
				if (((previousValue != value) 
							|| (this._tblSubMenus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSubMenus.Entity = null;
						previousValue.tblMenuItems.Remove(this);
					}
					this._tblSubMenus.Entity = value;
					if ((value != null))
					{
						value.tblMenuItems.Add(this);
						this._SubMenuID = value.SubMenuID;
					}
					else
					{
						this._SubMenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblSubMenus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSubMenus")]
	public partial class tblSubMenus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubMenuID;
		
		private string _SubMenuName;
		
		private System.Nullable<int> _MenuID;
		
		private EntitySet<tblMenuItem> _tblMenuItems;
		
		private EntityRef<tblMainMenu> _tblMainMenu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubMenuIDChanging(int value);
    partial void OnSubMenuIDChanged();
    partial void OnSubMenuNameChanging(string value);
    partial void OnSubMenuNameChanged();
    partial void OnMenuIDChanging(System.Nullable<int> value);
    partial void OnMenuIDChanged();
    #endregion
		
		public tblSubMenus()
		{
			this._tblMenuItems = new EntitySet<tblMenuItem>(new Action<tblMenuItem>(this.attach_tblMenuItems), new Action<tblMenuItem>(this.detach_tblMenuItems));
			this._tblMainMenu = default(EntityRef<tblMainMenu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenuID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubMenuID
		{
			get
			{
				return this._SubMenuID;
			}
			set
			{
				if ((this._SubMenuID != value))
				{
					this.OnSubMenuIDChanging(value);
					this.SendPropertyChanging();
					this._SubMenuID = value;
					this.SendPropertyChanged("SubMenuID");
					this.OnSubMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenuName", DbType="VarChar(200)")]
		public string SubMenuName
		{
			get
			{
				return this._SubMenuName;
			}
			set
			{
				if ((this._SubMenuName != value))
				{
					this.OnSubMenuNameChanging(value);
					this.SendPropertyChanging();
					this._SubMenuName = value;
					this.SendPropertyChanged("SubMenuName");
					this.OnSubMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int")]
		public System.Nullable<int> MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._tblMainMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSubMenus_tblMenuItem", Storage="_tblMenuItems", ThisKey="SubMenuID", OtherKey="SubMenuID")]
		public EntitySet<tblMenuItem> tblMenuItems
		{
			get
			{
				return this._tblMenuItems;
			}
			set
			{
				this._tblMenuItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMainMenu_tblSubMenus", Storage="_tblMainMenu", ThisKey="MenuID", OtherKey="MenuID", IsForeignKey=true)]
		public tblMainMenu tblMainMenu
		{
			get
			{
				return this._tblMainMenu.Entity;
			}
			set
			{
				tblMainMenu previousValue = this._tblMainMenu.Entity;
				if (((previousValue != value) 
							|| (this._tblMainMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMainMenu.Entity = null;
						previousValue.tblSubMenus.Remove(this);
					}
					this._tblMainMenu.Entity = value;
					if ((value != null))
					{
						value.tblSubMenus.Add(this);
						this._MenuID = value.MenuID;
					}
					else
					{
						this._MenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMainMenu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMenuItems(tblMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.tblSubMenus = this;
		}
		
		private void detach_tblMenuItems(tblMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.tblSubMenus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Druginfo")]
	public partial class Druginfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DrugId;
		
		private string _DrugName;
		
		private System.Nullable<int> _SupplierID;
		
		private string _SupplierName;
		
		private string _RetailPrice;
		
		private string _RegularPrice;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrugIdChanging(int value);
    partial void OnDrugIdChanged();
    partial void OnDrugNameChanging(string value);
    partial void OnDrugNameChanged();
    partial void OnSupplierIDChanging(System.Nullable<int> value);
    partial void OnSupplierIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnRetailPriceChanging(string value);
    partial void OnRetailPriceChanged();
    partial void OnRegularPriceChanging(string value);
    partial void OnRegularPriceChanged();
    #endregion
		
		public Druginfo()
		{
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DrugId
		{
			get
			{
				return this._DrugId;
			}
			set
			{
				if ((this._DrugId != value))
				{
					this.OnDrugIdChanging(value);
					this.SendPropertyChanging();
					this._DrugId = value;
					this.SendPropertyChanged("DrugId");
					this.OnDrugIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugName", DbType="VarChar(256)")]
		public string DrugName
		{
			get
			{
				return this._DrugName;
			}
			set
			{
				if ((this._DrugName != value))
				{
					this.OnDrugNameChanging(value);
					this.SendPropertyChanging();
					this._DrugName = value;
					this.SendPropertyChanged("DrugName");
					this.OnDrugNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int")]
		public System.Nullable<int> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(256)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetailPrice", DbType="VarChar(256)")]
		public string RetailPrice
		{
			get
			{
				return this._RetailPrice;
			}
			set
			{
				if ((this._RetailPrice != value))
				{
					this.OnRetailPriceChanging(value);
					this.SendPropertyChanging();
					this._RetailPrice = value;
					this.SendPropertyChanged("RetailPrice");
					this.OnRetailPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularPrice", DbType="VarChar(256)")]
		public string RegularPrice
		{
			get
			{
				return this._RegularPrice;
			}
			set
			{
				if ((this._RegularPrice != value))
				{
					this.OnRegularPriceChanging(value);
					this.SendPropertyChanging();
					this._RegularPrice = value;
					this.SendPropertyChanged("RegularPrice");
					this.OnRegularPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Druginfo", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Druginfos.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Druginfos.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suppliers")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierID;
		
		private string _SupplierName;
		
		private EntitySet<Druginfo> _Druginfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(int value);
    partial void OnSupplierIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    #endregion
		
		public Supplier()
		{
			this._Druginfos = new EntitySet<Druginfo>(new Action<Druginfo>(this.attach_Druginfos), new Action<Druginfo>(this.detach_Druginfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(256)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Druginfo", Storage="_Druginfos", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<Druginfo> Druginfos
		{
			get
			{
				return this._Druginfos;
			}
			set
			{
				this._Druginfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Druginfos(Druginfo entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Druginfos(Druginfo entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	public partial class GetDrugListResult
	{
		
		private string _ImgNum;
		
		private int _DrugId;
		
		private string _DrugName;
		
		private string _RetailPrice;
		
		private string _RegularPrice;
		
		public GetDrugListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgNum", DbType="VarChar(1)")]
		public string ImgNum
		{
			get
			{
				return this._ImgNum;
			}
			set
			{
				if ((this._ImgNum != value))
				{
					this._ImgNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugId", DbType="Int NOT NULL")]
		public int DrugId
		{
			get
			{
				return this._DrugId;
			}
			set
			{
				if ((this._DrugId != value))
				{
					this._DrugId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugName", DbType="VarChar(256)")]
		public string DrugName
		{
			get
			{
				return this._DrugName;
			}
			set
			{
				if ((this._DrugName != value))
				{
					this._DrugName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetailPrice", DbType="VarChar(256)")]
		public string RetailPrice
		{
			get
			{
				return this._RetailPrice;
			}
			set
			{
				if ((this._RetailPrice != value))
				{
					this._RetailPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularPrice", DbType="VarChar(256)")]
		public string RegularPrice
		{
			get
			{
				return this._RegularPrice;
			}
			set
			{
				if ((this._RegularPrice != value))
				{
					this._RegularPrice = value;
				}
			}
		}
	}
	
	public partial class GetDrugTypesResult
	{
		
		private System.Nullable<int> _DrugTypeID;
		
		private string _DrugTypeName;
		
		private System.Nullable<int> _drugcount;
		
		public GetDrugTypesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugTypeID", DbType="Int")]
		public System.Nullable<int> DrugTypeID
		{
			get
			{
				return this._DrugTypeID;
			}
			set
			{
				if ((this._DrugTypeID != value))
				{
					this._DrugTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugTypeName", DbType="VarChar(256)")]
		public string DrugTypeName
		{
			get
			{
				return this._DrugTypeName;
			}
			set
			{
				if ((this._DrugTypeName != value))
				{
					this._DrugTypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugcount", DbType="Int")]
		public System.Nullable<int> drugcount
		{
			get
			{
				return this._drugcount;
			}
			set
			{
				if ((this._drugcount != value))
				{
					this._drugcount = value;
				}
			}
		}
	}
	
	public partial class GetSupplierNameResult
	{
		
		private System.Nullable<int> _SupplierId;
		
		private string _Suppliername;
		
		private System.Nullable<int> _drugcount;
		
		public GetSupplierNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int")]
		public System.Nullable<int> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suppliername", DbType="VarChar(256)")]
		public string Suppliername
		{
			get
			{
				return this._Suppliername;
			}
			set
			{
				if ((this._Suppliername != value))
				{
					this._Suppliername = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugcount", DbType="Int")]
		public System.Nullable<int> drugcount
		{
			get
			{
				return this._drugcount;
			}
			set
			{
				if ((this._drugcount != value))
				{
					this._drugcount = value;
				}
			}
		}
	}
	
	public partial class GetProductDetailsResult
	{
		
		private string _DrugName;
		
		private string _SupplierName;
		
		private string _RetailPrice;
		
		private string _RegularPrice;
		
		private string _drugtypename;
		
		private string _ImageNum;
		
		public GetProductDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugName", DbType="VarChar(256)")]
		public string DrugName
		{
			get
			{
				return this._DrugName;
			}
			set
			{
				if ((this._DrugName != value))
				{
					this._DrugName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(256)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetailPrice", DbType="VarChar(256)")]
		public string RetailPrice
		{
			get
			{
				return this._RetailPrice;
			}
			set
			{
				if ((this._RetailPrice != value))
				{
					this._RetailPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularPrice", DbType="VarChar(256)")]
		public string RegularPrice
		{
			get
			{
				return this._RegularPrice;
			}
			set
			{
				if ((this._RegularPrice != value))
				{
					this._RegularPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugtypename", DbType="VarChar(256)")]
		public string drugtypename
		{
			get
			{
				return this._drugtypename;
			}
			set
			{
				if ((this._drugtypename != value))
				{
					this._drugtypename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageNum", DbType="VarChar(1)")]
		public string ImageNum
		{
			get
			{
				return this._ImageNum;
			}
			set
			{
				if ((this._ImageNum != value))
				{
					this._ImageNum = value;
				}
			}
		}
	}
	
	public partial class GetDrugNamesSearchResult
	{
		
		private int _SupplierID;
		
		private string _SupplierName;
		
		private System.Nullable<int> _DrugID;
		
		private string _ImageNum;
		
		private string _DrugName;
		
		public GetDrugNamesSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int NOT NULL")]
		public int SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this._SupplierID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(256)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugID", DbType="Int")]
		public System.Nullable<int> DrugID
		{
			get
			{
				return this._DrugID;
			}
			set
			{
				if ((this._DrugID != value))
				{
					this._DrugID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageNum", DbType="VarChar(1)")]
		public string ImageNum
		{
			get
			{
				return this._ImageNum;
			}
			set
			{
				if ((this._ImageNum != value))
				{
					this._ImageNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugName", DbType="VarChar(256)")]
		public string DrugName
		{
			get
			{
				return this._DrugName;
			}
			set
			{
				if ((this._DrugName != value))
				{
					this._DrugName = value;
				}
			}
		}
	}
	
	public partial class GetMenuResult
	{
		
		private int _MainMenuID;
		
		private string _MainMenuName;
		
		private System.Nullable<int> _SubMainMenuID;
		
		private System.Nullable<int> _SubMenuID;
		
		private string _SubMenuName;
		
		private System.Nullable<int> _ItemMainMenuID;
		
		private System.Nullable<int> _ItemSubMenuID;
		
		private System.Nullable<int> _MenuItemID;
		
		private string _MenuItemName;
		
		public GetMenuResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainMenuID", DbType="Int NOT NULL")]
		public int MainMenuID
		{
			get
			{
				return this._MainMenuID;
			}
			set
			{
				if ((this._MainMenuID != value))
				{
					this._MainMenuID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainMenuName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string MainMenuName
		{
			get
			{
				return this._MainMenuName;
			}
			set
			{
				if ((this._MainMenuName != value))
				{
					this._MainMenuName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMainMenuID", DbType="Int")]
		public System.Nullable<int> SubMainMenuID
		{
			get
			{
				return this._SubMainMenuID;
			}
			set
			{
				if ((this._SubMainMenuID != value))
				{
					this._SubMainMenuID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenuID", DbType="Int")]
		public System.Nullable<int> SubMenuID
		{
			get
			{
				return this._SubMenuID;
			}
			set
			{
				if ((this._SubMenuID != value))
				{
					this._SubMenuID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenuName", DbType="VarChar(200)")]
		public string SubMenuName
		{
			get
			{
				return this._SubMenuName;
			}
			set
			{
				if ((this._SubMenuName != value))
				{
					this._SubMenuName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemMainMenuID", DbType="Int")]
		public System.Nullable<int> ItemMainMenuID
		{
			get
			{
				return this._ItemMainMenuID;
			}
			set
			{
				if ((this._ItemMainMenuID != value))
				{
					this._ItemMainMenuID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSubMenuID", DbType="Int")]
		public System.Nullable<int> ItemSubMenuID
		{
			get
			{
				return this._ItemSubMenuID;
			}
			set
			{
				if ((this._ItemSubMenuID != value))
				{
					this._ItemSubMenuID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemID", DbType="Int")]
		public System.Nullable<int> MenuItemID
		{
			get
			{
				return this._MenuItemID;
			}
			set
			{
				if ((this._MenuItemID != value))
				{
					this._MenuItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemName", DbType="VarChar(200)")]
		public string MenuItemName
		{
			get
			{
				return this._MenuItemName;
			}
			set
			{
				if ((this._MenuItemName != value))
				{
					this._MenuItemName = value;
				}
			}
		}
	}
	
	public partial class LoginResult
	{
		
		private string _Passwordhash;
		
		private string _PhoneNumber;
		
		private string _UserName;
		
		public LoginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwordhash", DbType="NVarChar(MAX)")]
		public string Passwordhash
		{
			get
			{
				return this._Passwordhash;
			}
			set
			{
				if ((this._Passwordhash != value))
				{
					this._Passwordhash = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	public partial class GetUserPrescriptionListResult
	{
		
		private string _Title;
		
		private string _Description;
		
		private string _imageUrl;
		
		public GetUserPrescriptionListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageUrl", DbType="VarChar(256)")]
		public string imageUrl
		{
			get
			{
				return this._imageUrl;
			}
			set
			{
				if ((this._imageUrl != value))
				{
					this._imageUrl = value;
				}
			}
		}
	}
	
	public partial class ConfirmationEmailResult
	{
		
		private string _Email;
		
		private string _Title;
		
		public ConfirmationEmailResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
	}
	
	public partial class PrescriptionListResult
	{
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _Name;
		
		private string _Title;
		
		private string _Description;
		
		private string _imageUrl;
		
		private string _CreatedDate;
		
		public PrescriptionListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imageUrl", DbType="VarChar(256)")]
		public string imageUrl
		{
			get
			{
				return this._imageUrl;
			}
			set
			{
				if ((this._imageUrl != value))
				{
					this._imageUrl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="VarChar(10)")]
		public string CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
	}
	
	public partial class InsertActivationCodeResult
	{
		
		private string _Column1;
		
		public InsertActivationCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="VarChar(MAX)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class UploadingPrescriptionNewResult
	{
		
		private string _email;
		
		private string _name;
		
		private int _PrescriptionOrderID;
		
		public UploadingPrescriptionNewResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(256)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrescriptionOrderID", DbType="Int NOT NULL")]
		public int PrescriptionOrderID
		{
			get
			{
				return this._PrescriptionOrderID;
			}
			set
			{
				if ((this._PrescriptionOrderID != value))
				{
					this._PrescriptionOrderID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
