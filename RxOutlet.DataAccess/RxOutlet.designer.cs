#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RxOutlet.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Elixir")]
	public partial class RxOutletDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblMainMenu(tblMainMenu instance);
    partial void UpdatetblMainMenu(tblMainMenu instance);
    partial void DeletetblMainMenu(tblMainMenu instance);
    partial void InserttblMenuItem(tblMenuItem instance);
    partial void UpdatetblMenuItem(tblMenuItem instance);
    partial void DeletetblMenuItem(tblMenuItem instance);
    partial void InserttblSubMenus(tblSubMenus instance);
    partial void UpdatetblSubMenus(tblSubMenus instance);
    partial void DeletetblSubMenus(tblSubMenus instance);
    #endregion
		
		public RxOutletDataContext() : 
				base(global::RxOutlet.DataAccess.Properties.Settings.Default.ElixirConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RxOutletDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RxOutletDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RxOutletDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RxOutletDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblMainMenu> tblMainMenus
		{
			get
			{
				return this.GetTable<tblMainMenu>();
			}
		}
		
		public System.Data.Linq.Table<tblMenuItem> tblMenuItems
		{
			get
			{
				return this.GetTable<tblMenuItem>();
			}
		}
		
		public System.Data.Linq.Table<tblSubMenus> tblSubMenus
		{
			get
			{
				return this.GetTable<tblSubMenus>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDrugList")]
		public ISingleResult<GetDrugListResult> GetDrugList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetDrugListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSupplierName")]
		public ISingleResult<GetSupplierNameResult> GetSupplierName()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetSupplierNameResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMainMenu")]
	public partial class tblMainMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuID;
		
		private string _MenuName;
		
		private EntitySet<tblMenuItem> _tblMenuItems;
		
		private EntitySet<tblSubMenus> _tblSubMenus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIDChanging(int value);
    partial void OnMenuIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    #endregion
		
		public tblMainMenu()
		{
			this._tblMenuItems = new EntitySet<tblMenuItem>(new Action<tblMenuItem>(this.attach_tblMenuItems), new Action<tblMenuItem>(this.detach_tblMenuItems));
			this._tblSubMenus = new EntitySet<tblSubMenus>(new Action<tblSubMenus>(this.attach_tblSubMenus), new Action<tblSubMenus>(this.detach_tblSubMenus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMainMenu_tblMenuItem", Storage="_tblMenuItems", ThisKey="MenuID", OtherKey="MenuID")]
		public EntitySet<tblMenuItem> tblMenuItems
		{
			get
			{
				return this._tblMenuItems;
			}
			set
			{
				this._tblMenuItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMainMenu_tblSubMenus", Storage="_tblSubMenus", ThisKey="MenuID", OtherKey="MenuID")]
		public EntitySet<tblSubMenus> tblSubMenus
		{
			get
			{
				return this._tblSubMenus;
			}
			set
			{
				this._tblSubMenus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMenuItems(tblMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.tblMainMenu = this;
		}
		
		private void detach_tblMenuItems(tblMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.tblMainMenu = null;
		}
		
		private void attach_tblSubMenus(tblSubMenus entity)
		{
			this.SendPropertyChanging();
			entity.tblMainMenu = this;
		}
		
		private void detach_tblSubMenus(tblSubMenus entity)
		{
			this.SendPropertyChanging();
			entity.tblMainMenu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMenuItems")]
	public partial class tblMenuItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuItemID;
		
		private string _MenuItemName;
		
		private System.Nullable<int> _MenuID;
		
		private System.Nullable<int> _SubMenuID;
		
		private EntityRef<tblMainMenu> _tblMainMenu;
		
		private EntityRef<tblSubMenus> _tblSubMenus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuItemIDChanging(int value);
    partial void OnMenuItemIDChanged();
    partial void OnMenuItemNameChanging(string value);
    partial void OnMenuItemNameChanged();
    partial void OnMenuIDChanging(System.Nullable<int> value);
    partial void OnMenuIDChanged();
    partial void OnSubMenuIDChanging(System.Nullable<int> value);
    partial void OnSubMenuIDChanged();
    #endregion
		
		public tblMenuItem()
		{
			this._tblMainMenu = default(EntityRef<tblMainMenu>);
			this._tblSubMenus = default(EntityRef<tblSubMenus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MenuItemID
		{
			get
			{
				return this._MenuItemID;
			}
			set
			{
				if ((this._MenuItemID != value))
				{
					this.OnMenuItemIDChanging(value);
					this.SendPropertyChanging();
					this._MenuItemID = value;
					this.SendPropertyChanged("MenuItemID");
					this.OnMenuItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemName", DbType="VarChar(200)")]
		public string MenuItemName
		{
			get
			{
				return this._MenuItemName;
			}
			set
			{
				if ((this._MenuItemName != value))
				{
					this.OnMenuItemNameChanging(value);
					this.SendPropertyChanging();
					this._MenuItemName = value;
					this.SendPropertyChanged("MenuItemName");
					this.OnMenuItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int")]
		public System.Nullable<int> MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._tblMainMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenuID", DbType="Int")]
		public System.Nullable<int> SubMenuID
		{
			get
			{
				return this._SubMenuID;
			}
			set
			{
				if ((this._SubMenuID != value))
				{
					if (this._tblSubMenus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubMenuIDChanging(value);
					this.SendPropertyChanging();
					this._SubMenuID = value;
					this.SendPropertyChanged("SubMenuID");
					this.OnSubMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMainMenu_tblMenuItem", Storage="_tblMainMenu", ThisKey="MenuID", OtherKey="MenuID", IsForeignKey=true)]
		public tblMainMenu tblMainMenu
		{
			get
			{
				return this._tblMainMenu.Entity;
			}
			set
			{
				tblMainMenu previousValue = this._tblMainMenu.Entity;
				if (((previousValue != value) 
							|| (this._tblMainMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMainMenu.Entity = null;
						previousValue.tblMenuItems.Remove(this);
					}
					this._tblMainMenu.Entity = value;
					if ((value != null))
					{
						value.tblMenuItems.Add(this);
						this._MenuID = value.MenuID;
					}
					else
					{
						this._MenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMainMenu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSubMenus_tblMenuItem", Storage="_tblSubMenus", ThisKey="SubMenuID", OtherKey="SubMenuID", IsForeignKey=true)]
		public tblSubMenus tblSubMenus
		{
			get
			{
				return this._tblSubMenus.Entity;
			}
			set
			{
				tblSubMenus previousValue = this._tblSubMenus.Entity;
				if (((previousValue != value) 
							|| (this._tblSubMenus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSubMenus.Entity = null;
						previousValue.tblMenuItems.Remove(this);
					}
					this._tblSubMenus.Entity = value;
					if ((value != null))
					{
						value.tblMenuItems.Add(this);
						this._SubMenuID = value.SubMenuID;
					}
					else
					{
						this._SubMenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblSubMenus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSubMenus")]
	public partial class tblSubMenus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubMenuID;
		
		private string _SubMenuName;
		
		private System.Nullable<int> _MenuID;
		
		private EntitySet<tblMenuItem> _tblMenuItems;
		
		private EntityRef<tblMainMenu> _tblMainMenu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubMenuIDChanging(int value);
    partial void OnSubMenuIDChanged();
    partial void OnSubMenuNameChanging(string value);
    partial void OnSubMenuNameChanged();
    partial void OnMenuIDChanging(System.Nullable<int> value);
    partial void OnMenuIDChanged();
    #endregion
		
		public tblSubMenus()
		{
			this._tblMenuItems = new EntitySet<tblMenuItem>(new Action<tblMenuItem>(this.attach_tblMenuItems), new Action<tblMenuItem>(this.detach_tblMenuItems));
			this._tblMainMenu = default(EntityRef<tblMainMenu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenuID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubMenuID
		{
			get
			{
				return this._SubMenuID;
			}
			set
			{
				if ((this._SubMenuID != value))
				{
					this.OnSubMenuIDChanging(value);
					this.SendPropertyChanging();
					this._SubMenuID = value;
					this.SendPropertyChanged("SubMenuID");
					this.OnSubMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubMenuName", DbType="VarChar(200)")]
		public string SubMenuName
		{
			get
			{
				return this._SubMenuName;
			}
			set
			{
				if ((this._SubMenuName != value))
				{
					this.OnSubMenuNameChanging(value);
					this.SendPropertyChanging();
					this._SubMenuName = value;
					this.SendPropertyChanged("SubMenuName");
					this.OnSubMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="Int")]
		public System.Nullable<int> MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._tblMainMenu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblSubMenus_tblMenuItem", Storage="_tblMenuItems", ThisKey="SubMenuID", OtherKey="SubMenuID")]
		public EntitySet<tblMenuItem> tblMenuItems
		{
			get
			{
				return this._tblMenuItems;
			}
			set
			{
				this._tblMenuItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMainMenu_tblSubMenus", Storage="_tblMainMenu", ThisKey="MenuID", OtherKey="MenuID", IsForeignKey=true)]
		public tblMainMenu tblMainMenu
		{
			get
			{
				return this._tblMainMenu.Entity;
			}
			set
			{
				tblMainMenu previousValue = this._tblMainMenu.Entity;
				if (((previousValue != value) 
							|| (this._tblMainMenu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMainMenu.Entity = null;
						previousValue.tblSubMenus.Remove(this);
					}
					this._tblMainMenu.Entity = value;
					if ((value != null))
					{
						value.tblSubMenus.Add(this);
						this._MenuID = value.MenuID;
					}
					else
					{
						this._MenuID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMainMenu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMenuItems(tblMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.tblSubMenus = this;
		}
		
		private void detach_tblMenuItems(tblMenuItem entity)
		{
			this.SendPropertyChanging();
			entity.tblSubMenus = null;
		}
	}
	
	public partial class GetDrugListResult
	{
		
		private string _ID;
		
		private string _DrugName;
		
		private string _RetailPrice;
		
		private string _RegularPrice;
		
		public GetDrugListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(1)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrugName", DbType="VarChar(256)")]
		public string DrugName
		{
			get
			{
				return this._DrugName;
			}
			set
			{
				if ((this._DrugName != value))
				{
					this._DrugName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RetailPrice", DbType="VarChar(256)")]
		public string RetailPrice
		{
			get
			{
				return this._RetailPrice;
			}
			set
			{
				if ((this._RetailPrice != value))
				{
					this._RetailPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegularPrice", DbType="VarChar(256)")]
		public string RegularPrice
		{
			get
			{
				return this._RegularPrice;
			}
			set
			{
				if ((this._RegularPrice != value))
				{
					this._RegularPrice = value;
				}
			}
		}
	}
	
	public partial class GetSupplierNameResult
	{
		
		private System.Nullable<int> _SupplierId;
		
		private string _Suppliername;
		
		private System.Nullable<int> _drugcount;
		
		public GetSupplierNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int")]
		public System.Nullable<int> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this._SupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suppliername", DbType="VarChar(256)")]
		public string Suppliername
		{
			get
			{
				return this._Suppliername;
			}
			set
			{
				if ((this._Suppliername != value))
				{
					this._Suppliername = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugcount", DbType="Int")]
		public System.Nullable<int> drugcount
		{
			get
			{
				return this._drugcount;
			}
			set
			{
				if ((this._drugcount != value))
				{
					this._drugcount = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
